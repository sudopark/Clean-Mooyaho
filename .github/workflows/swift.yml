name: Swift

on:
  pull_request

jobs:
  test:
    name: Test
    runs-on: [self-hosted]
    # runs-on: macOS-latest
    strategy:
        matrix:
          xcode: [12.5]
          destination: ['platform=iOS Simulator,name=iPhone 11']
    
    steps:
      - run: swift --version
      - name: Checkout
        uses: actions/checkout@master

      # - name: iOS App Unit Tests
      #   id: test_ios_app
      #   run: |
      #     xcodebuild clean test \
      #     -workspace Clean-Mooyaho-Codebase.xcworkspace \
      #     -scheme Mooyaho\ iOS \
      #     -destination "${destination}" \
      #     -configuration Debug \
      #     CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO ONLY_ACTIVE_ARCH=NO
      #   env: 
      #     destination: ${{ matrix.destination }}

      # - name: Domain Unit Tests
      #   id: test_domin
      #   run: |
      #     xcodebuild clean test \
      #     -workspace Clean-Mooyaho-Codebase.xcworkspace \
      #     -scheme Domain \
      #     -destination "${destination}" \
      #     -configuration Debug \
      #     CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO ONLY_ACTIVE_ARCH=NO
      #   env: 
      #     destination: ${{ matrix.destination }}
          
          
      # - name: DataStore Unit Tests
      #   id: test_data_store
      #   run: |
      #     xcodebuild clean test \
      #     -workspace Clean-Mooyaho-Codebase.xcworkspace \
      #     -scheme DataStore \
      #     -destination "${destination}" \
      #     -configuration Debug \
      #     CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO ONLY_ACTIVE_ARCH=NO
      #   env: 
      #     destination: ${{ matrix.destination }}

      # - name: FirebaseService Unit Tests
      #   id: test_fb
      #   run: |
      #     xcodebuild clean test \
      #     -workspace Clean-Mooyaho-Codebase.xcworkspace \
      #     -scheme FirebaseService \
      #     -destination "${destination}" \
      #     -configuration Debug \
      #     CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO ONLY_ACTIVE_ARCH=NO
      #   env: 
      #     destination: ${{ matrix.destination }}

      # - name: Check test results - post fail message or not
      #   if: steps.test_ios_app.outputs.result != 0 || steps.test_domin.outputs.result != 0 || steps.test_data_store.outputs.result != 0 || steps.test_fb.outputs.result != 0
      #   run: |
      #     curl -X POST 'https://kakaowork.com/bots/hook/e1y16mw1wcyy' -H 'Content-Type: application/json' -d '{ "text": "Ïã§Ìå® Î©îÏÑ∏ÏßÄ", "blocks": [ { "type": "header", "text": "ü§¨ Actions Ïã§Ìå®", "style": "red" }, { "type": "text", "text": "${{ github.event.pull_request.title }}", "markdown": true}, { "type": "button", "text": "ÏûêÏÑ∏Ìûà Î≥¥Í∏∞ üëâ", "action_type": "open_system_browser", "value": "${{ github.event.pull_request.html_url }}" } ] }' \
      #     exit 1

      - name: Post success message
        run: |
          curl -X POST 'https://kakaowork.com/bots/hook/e1y16mw1wcyy' -H 'Content-Type: application/json' -d '{ "text": "Push alarm message", "blocks": [ { "type": "header", "text": "ü§™ Actions ÏÑ±Í≥µ", "style": "blue" }, { "type": "text", "text": "${{ github.event.pull_request.title }}", "markdown": true }, { "type": "button", "text": "ÏûêÏÑ∏Ìûà Î≥¥Í∏∞ üëâ", "action_type": "open_system_browser", "value": "${{ github.event.pull_request.html_url }}" } ] }'


